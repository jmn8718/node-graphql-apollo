{"version":3,"sources":["../src/index.js"],"names":["server","createServer","port","get","listen","on","error","syscall","bind","code","console","process","exit","addr","address","log"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA;;;;AAIA,IAAMA,SAAS,eAAKC,YAAL,kBAAf;;AAEA;;;AAGA,IAAMC,OAAO,iBAAIC,GAAJ,CAAQ,MAAR,CAAb;AACAH,OAAOI,MAAP,CAAcF,IAAd;AACAF,OAAOK,EAAP,CAAU,OAAV,EAAmB,UAACC,KAAD,EAAW;AAC5B,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,MAAME,OAAO,OAAON,IAAP,KAAgB,QAAhB,aACDA,IADC,aAEDA,IAFZ;;AAIA;AACA,UAAQI,MAAMG,IAAd;AACE,SAAK,QAAL;AACEC,cAAQJ,KAAR,CAAiBE,IAAjB,oCADF,CACyD;AACvDG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEF,cAAQJ,KAAR,CAAiBE,IAAjB,yBADF,CAC8C;AAC5CG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMN,KAAN;AAVJ;AAYD,CAtBD;;AAwBAN,OAAOK,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3B,MAAMQ,OAAOb,OAAOc,OAAP,EAAb;AACA,MAAMN,OAAO,OAAOK,IAAP,KAAgB,QAAhB,aACDX,IADC,aAEDA,IAFZ;AAGAQ,UAAQK,GAAR,CAAYP,IAAZ,EAL2B,CAKR;AACnBE,UAAQK,GAAR,yBAAkC,iBAAIZ,GAAJ,CAAQ,MAAR,CAAlC,EAN2B,CAM2B;AACvD,CAPD","file":"index.js","sourcesContent":["import http from 'http';\nimport app from './server';\n\n/**\n * Create HTTP server.\n */\n\nconst server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\nconst port = app.get('port');\nserver.listen(port);\nserver.on('error', (error) => {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  const bind = typeof port === 'string'\n    ? `Pipe ${port}`\n    : `Port ${port}`;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(`${bind} requires elevated privileges`); // eslint-disable-line no-console\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(`${bind} is already in use`); // eslint-disable-line no-console\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n});\n\nserver.on('listening', () => {\n  const addr = server.address();\n  const bind = typeof addr === 'string'\n    ? `Pipe ${port}`\n    : `Port ${port}`;\n  console.log(bind); // eslint-disable-line no-console\n  console.log(`Listening on port: ${app.get('port')}`); // eslint-disable-line no-console\n});\n"]}